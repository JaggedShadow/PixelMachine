add_library(LibGPU STATIC)

file(GLOB LIBGPU_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

if(GRAPHICS_API STREQUAL "Vulkan")
    file(GLOB LIBGPU_HEADERS_PLATFORM ${CMAKE_CURRENT_SOURCE_DIR}/vulkan/*.h)
    file(GLOB LIBGPU_SOURCES_PLATFORM ${CMAKE_CURRENT_SOURCE_DIR}/vulkan/*.cpp)
    source_group("Vulkan" FILES ${LIBGPU_HEADERS_PLATFORM} ${LIBGPU_SOURCES_PLATFORM})

    set(LIBGPU_SDK_HEADERS_PATH "$ENV{VULKAN_SDK}/Include")
    set(LIBGPU_SDK_LIBS_PATH "$ENV{VULKAN_SDK}/Lib")
    if(NOT EXISTS "${LIBGPU_SDK_HEADERS_PATH}/vulkan/vulkan.h")
        message(FATAL_ERROR "Vulkan SDK not found (VULKAN_SDK environment variable not set).")
    endif()
    list(APPEND LIBGPU_DEFINITIONS "-DVK_USE_PLATFORM_WIN32_KHR")
    if(VULKAN_ENABLE_VALIDATION)
        list(APPEND LIBGPU_DEFINITIONS "-DVK_ENABLE_VALIDATION")
    endif()

elseif(GRAPHICS_API STREQUAL "DX12")
    file(GLOB LIBGPU_HEADERS_PLATFORM ${CMAKE_CURRENT_SOURCE_DIR}/dx12/*.h)
    file(GLOB LIBGPU_SOURCES_PLATFORM ${CMAKE_CURRENT_SOURCE_DIR}/dx12/*.cpp)
    source_group("DX12" FILES ${LIBGPU_HEADERS_PLATFORM} ${LIBGPU_SOURCES_PLATFORM})
endif()

target_sources(LibGPU PRIVATE ${LIBGPU_HEADERS} ${LIBGPU_HEADERS_PLATFORM} ${LIBGPU_SOURCES_PLATFORM})
target_include_directories(LibGPU PRIVATE ${CMAKE_CURRENT_SOURCE_DIR} ${LIBGPU_SDK_HEADERS_PATH})
target_link_libraries(LibGPU PRIVATE "${LIBGPU_SDK_LIBS_PATH}/vulkan-1.lib")
target_compile_definitions(LibGPU PRIVATE ${LIBGPU_DEFINITIONS})